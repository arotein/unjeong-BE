plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'com.google.cloud.tools.jib' version '3.3.1'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

jib {
    from {
        image = 'eclipse-temurin:17-jre-alpine'
        auth {
            username = System.getenv("DOCKERHUB_ID")
            password = System.getenv("DOCKERHUB_PW")
        }
    }
    to {
        image = System.getenv("DOCKERHUB_IMG_UNJEONG")
        tags = [System.getenv("IMG_TAG")]
        auth {
            username = System.getenv("DOCKERHUB_ID")
            password = System.getenv("DOCKERHUB_PW")
        }
    }
    container {
        jvmFlags = ["-Djava.net.preferIPv4Stack=true"]
    }
}

group = 'spharoom'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.fusionauth:fusionauth-jwt:5.2.1'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation "org.apache.commons:commons-lang3"
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation "com.querydsl:querydsl-jpa:5.0.0"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0"
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    querydsl.extendsFrom compileClasspath
}